name: Deploy Service

on:
  workflow_call:
    inputs:
      dockerfile-path:
        required: true
        type: string
      ecr-repository:
        required: true
        type: string
      ecs-service:
        required: true
        type: string
      ecs-task-def-path:
        required: true
        type: string
      container-name:
        required: true
        type: string
      environment-variables:
        required: false
        type: string

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: ${{ inputs.ecr-repository }}
  ECS_SERVICE: ${{ inputs.ecs-service }}
  ECS_CLUSTER: zeco-eats-cluster
  ECS_TASK_DEFINITION: ${{ inputs.ecs-task-def-path }}
  CONTAINER_NAME: ${{ inputs.container-name }}




jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    #environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@0e613a0980cbf65ed5b322eb7a1e075d28913a83
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@62f4f872db3836360b72999f4b87f1ff13310f3a
        with:
          registry-type: public

      - name: Build, tag, and push image to Amazon ECR Public
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}
          REGISTRY_ALIAS: ${{ secrets.ECR_REGISTRY_ALIAS }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          docker build -t $ECR_REGISTRY/$REGISTRY_ALIAS/$ECR_REPOSITORY:$IMAGE_TAG -f ${{ inputs.dockerfile-path }}  .
          docker push $ECR_REGISTRY/$REGISTRY_ALIAS/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
          - name: Fill in the new image ID in the Amazon ECS task definition

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ steps.build-image.outputs.image }}
          environment-variables: ${{ inputs.environment-variables }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true

