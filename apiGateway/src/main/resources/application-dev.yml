spring:
  config:
    import: optional:configserver:http://localhost:8888

  cloud:
    gateway:
      redis-route-definition-repository: #redis location is already configured in application.yml( config server)
        enabled: true
      default-filters:
        - SecureHeaders
        #- TokenRelay
        - name: Retry
          args:
            retries: 3
            statuses: INTERNAL_SERVER_ERROR, BAD_GATEWAY
            #methods: GET, POST
            backoff:
              firstBackoff: 10ms
              maxBackoff: 50ms
              factor: 2
              basedOnPreviousValue: false
        - name: RequestRateLimiter #rate limiter
          args:
            redis-rate-limiter:
              key-resolver: "#{@customKeyResolver}"
              replenishRate: 10 # Allow up to 10 requests/sec per user
              burstCapacity: 20 # Allow bursts up to 20 tokens
              requestedTokens: 1 # use 1 token per request
              deny-empty-key: false #use true in prod

      routes:
        # Config Server Route
        - id: config-server
          uri: http://localhost:8888
          predicates:
            - Path=/api/configServer/**

        # Deliveries Service Route
        - id: deliveries-service
          uri: http://localhost:8083
          predicates:
            - Path=/api/deliveries/**, /_p/api/deliveries/**

        # Restaurants Service Route
        - id: restaurants-service
          uri: http://localhost:8081
          predicates:
            - Path=/api/restaurants/**, /_p/api/restaurants/**

        # Users Service Route
        - id: users-service
          uri: http://localhost:8082
          predicates:
            - Path=/api/users/**, /_p/api/users/**

management:
  endpoints:
    web:
      exposure:
        include: "*"
      base-path: /api/apiGateway/actuator
  endpoint:
    health:
      show-details: always
  metrics:
    tags:
      service: api-gateway
